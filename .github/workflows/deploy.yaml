name: Deploy Laravel to VPS

on:
  push:
    branches:
      - master

jobs:
  # Job 1: Pull latest changes
  pull-changes:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Pull Latest Changes
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /var/www/penjuriandemo.bellukstudio.my.id
          echo "üì• Pull latest changes..."

          # Debug current state
          echo "Current user: $(whoami)"
          echo "Directory owner: $(ls -la . | head -2)"
          echo "Git directory owner: $(ls -la .git/ | head -2)"

          # Add safe directory untuk Git
          git config --global --add safe.directory /var/www/penjuriandemo.bellukstudio.my.id
          git config --global --add safe.directory '*'

          # Fix ownership issues
          sudo chown -R $(whoami):$(whoami) . || true

          # Alternative approach: Use sudo git if ownership fix doesn't work
          git pull origin master || sudo git pull origin master

          # Reset web permissions after git pull
          sudo chown -R www-data:www-data storage/ bootstrap/cache/ || true
          sudo chown -R $(whoami):$(whoami) .git/ || true

  # Job 2: Stop containers and build
  build-containers:
    runs-on: ubuntu-latest
    needs: pull-changes
    steps:
    - name: Build Docker Containers
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /var/www/penjuriandemo.bellukstudio.my.id

          # Debug: Check files in directory
          echo "üìÅ Files in directory:"
          ls -la

          # Check for docker-compose files
          echo "üîç Looking for Docker Compose files:"
          ls -la docker-compose* || echo "No docker-compose files found"
          ls -la compose* || echo "No compose files found"

          # Try different docker-compose commands
          echo "üõë Stopping containers..."
          if [ -f "docker-compose.yml" ]; then
            docker compose -f docker-compose.yml down || docker-compose down || true
          elif [ -f "docker-compose.yaml" ]; then
            docker compose -f docker-compose.yaml down || docker-compose down || true
          elif [ -f "compose.yml" ]; then
            docker compose -f compose.yml down || true
          else
            echo "‚ùå No docker-compose file found!"
            exit 1
          fi

          echo "üê≥ Building containers..."
          if [ -f "docker-compose.yml" ]; then
            docker compose -f docker-compose.yml build --no-cache || docker-compose build --no-cache
          elif [ -f "docker-compose.yaml" ]; then
            docker compose -f docker-compose.yaml build --no-cache || docker-compose build --no-cache
          elif [ -f "compose.yml" ]; then
            docker compose -f compose.yml build --no-cache
          fi

  # Job 3: Start containers
  start-containers:
    runs-on: ubuntu-latest
    needs: build-containers
    steps:
    - name: Start Docker Containers
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /var/www/penjuriandemo.bellukstudio.my.id
          echo "üöÄ Starting containers..."

          if [ -f "docker-compose.yml" ]; then
            docker compose -f docker-compose.yml up -d || docker-compose up -d
          elif [ -f "docker-compose.yaml" ]; then
            docker compose -f docker-compose.yaml up -d || docker-compose up -d
          elif [ -f "compose.yml" ]; then
            docker compose -f compose.yml up -d
          else
            echo "‚ùå No docker-compose file found!"
            exit 1
          fi

          # Wait for containers to be ready
          echo "‚è≥ Waiting for containers to start..."
          sleep 30

          # Check container status
          echo "üìã Container status:"
          docker ps

  # Job 4: Setup Laravel
  setup-laravel:
    runs-on: ubuntu-latest
    needs: start-containers
    steps:
    - name: Setup Laravel Application
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /var/www/penjuriandemo.bellukstudio.my.id
          echo "‚öôÔ∏è Setting up Laravel..."

          # Run composer install inside the container
          docker exec penjurian-app composer install --no-dev --optimize-autoloader

          # Copy .env file if it doesn't exist
          docker exec penjurian-app bash -c '
            if [ ! -f .env ]; then
              cp .env.example .env && \
              php artisan key:generate && \
              echo "üóÑÔ∏è Running migrations..." && \
              php artisan migrate --seed --force
            fi
          '
          # Cache config
          echo "üîß Caching configuration..."
          docker exec penjurian-app php artisan config:cache
          docker exec penjurian-app php artisan route:cache
          docker exec penjurian-app php artisan view:cache

          echo "‚úÖ Deployment completed successfully!"
